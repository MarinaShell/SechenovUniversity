class ValueCalculator:
    ############################################################################
    #Инициализация класса ValueCalculator
    def __init__(self):
        pass

    ############################################################################
    #Высчитываем значение в 100 г
    def calculateValue(self, input_string):
        # Регулярное выражение для поиска числа и единицы измерения
        pattern = r'(\d+[.,]?\d*)\s*(.*)'

        # Поиск совпадений в строке
        match = re.search(pattern, input_string)
        value = None
        unit = None
        if match:
            # Извлекаем число и единицу измерения
            value = match.group(1).replace(',', '.')  # Преобразуем запятую в точку, чтобы можно было работать с числом
            unit = match.group(2).strip()  # Оставшаяся часть строки (единица измерения)
            
            # Преобразуем строку числа в float
            value = float(value)
        else:
            return None
           
        #Обрабатываем различные единицы измерения
        if unit in ['гр', 'г', 'мл', 'ml', 'вин']:
            # Если граммы, просто возвращаем деля на 100 г
            return value/100

        if unit in ['мг']:
            # Если мграммы, делим на 100г и на 1000 
            return value/(100*1000)

        elif unit == ['кг', 'л', 'l']:
            # Переводим килограммы или литры в граммы
            return value * 1000/100

        #считаем что 100 г
        elif unit in ['шт', 'уп', 'упак', 'м/уп', 'порция', 'пор']:
            # Для штук и упаковок просто возвращаем значение
            return value

        else:
            # Если единица измерения неизвестна
            return value, 'неизвестная единица измерения'